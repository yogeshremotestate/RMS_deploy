version: "3.3"
services:
  db:
    image: postgres:15
    container_name: postgres_rms
    restart: always
    environment:
      POSTGRES_USER: local
      POSTGRES_PASSWORD: local
      POSTGRES_DB: rms
    ports:
      - "5434:5432"
    volumes:
      - ./pgdata:/var/lib/postgresql/data


#version: '3.3'
#
#services:
#  db:
#    image: postgres:13
#    environment:
#      POSTGRES_USER: local
#      POSTGRES_PASSWORD: local
#      POSTGRES_DB: rms
#    ports:
#      - "5434:5432"
#    volumes:
#      - db_data:/var/lib/postgresql/data
#
#  app:
#    build: .
#    depends_on:
#      - db
#    ports:
#      - "8080:8080"
#    environment:
#      DB_HOST: db
#      DB_PORT: 5432
#      DB_NAME: rms
#      DB_USER: local
#      DB_PASSWORD: local
#    command: ./rms migrate -path ./migrations -database "postgres://local:local@db:5432/rms?sslmode=disable" up && ./rms
#
#volumes:
#  db_data:

#version: "3.3"
#services:
#  db:
#    image: postgres:15
#    container_name: postgres_rms
#    restart: always
#    environment:
#      POSTGRES_USER: local
#      POSTGRES_PASSWORD: local
#      POSTGRES_DB: rms
#    ports:
#      - "5434:5432" # Host:Container
#    volumes:
#      - ./pgdata:/var/lib/postgresql/data
#    networks:
#      - rms_network
#    healthcheck:
#      test: ["CMD-SHELL", "pg_isready -U local -d rms"]
#      interval: 10s
#      timeout: 5s
#      retries: 5
#
#  rms:
#    image: rms-deploy
#    container_name: rms_app
#    ports:
#      - "3000:3000"
#    environment:
#      DB_URL: "postgres://local:local@db:5432/rms?sslmode=disable"  # Use db as hostname, 5432 as the internal port
#    depends_on:
#      db:
#        condition: service_healthy
#    networks:
#      - rms_network
#    command: ./rms migrate -path ./migrations -database "postgres://local:local@db:5432/rms?sslmode=disable" up && ./rms
#
#networks:
#  rms_network:
#    driver: bridge
#
#
#version: "3.3"
#services:
#  db:
#    image: postgres:15
#    container_name: postgres_rms
#    restart: always
#    environment:
#      POSTGRES_USER: local
#      POSTGRES_PASSWORD: local
#      POSTGRES_DB: rms
#    ports:
#      - "5434:5432" # Host:Container
#    volumes:
#      - ./pgdata:/var/lib/postgresql/data
#    networks:
#      - rms_network
#    healthcheck:
#      test: ["CMD-SHELL", "pg_isready -U local -d rms"]
#      interval: 10s
#      timeout: 5s
#      retries: 5
#
#  rms:
#    image: rms-awsdeploy
#    container_name: rms_app
#    ports:
#      - "3000:3000"
#    environment:
#      DB_URL: "postgres://local:local@db:5432/rms?sslmode=disable"  # Use db as hostname, 5432 as the internal port
#    depends_on:
#      - db  # Corrected format for depends_on
#    networks:
#      - rms_network
#    command: ./rms migrate -path ./migrations -database "postgres://local:local@db:5432/rms?sslmode=disable" up && ./rms
#
#networks:
#  rms_network:
#    driver: bridge
